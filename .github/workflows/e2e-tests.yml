name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Start dev server in background
      run: |
        pnpm --filter @brepflow/studio run dev --port 5173 &
        echo "DEV_SERVER_PID=$!" >> $GITHUB_ENV

    - name: Wait for dev server
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'

    - name: Run E2E tests
      run: pnpm test:e2e
      env:
        CI: true

    - name: Stop dev server
      if: always()
      run: |
        if [ ! -z "$DEV_SERVER_PID" ]; then
          kill $DEV_SERVER_PID || true
        fi

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos
        path: test-results/
        retention-days: 30

  visual-regression:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run visual regression tests
      run: pnpm test:e2e --grep "Visual Regression"
      env:
        CI: true

    - name: Upload visual diff artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-regression-diffs
        path: test-results/
        retention-days: 30

  performance-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run performance tests
      run: pnpm test:e2e --grep "Performance"
      env:
        CI: true

    - name: Upload performance reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-reports
        path: test-results/
        retention-days: 90